 
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: hello-backstage
  namespace: default
  description: Generated template from hello-backstage application
  tags:
  - java
  - quarkus
spec:
  type: service
  parameters:
  - title: Component configuration
    required:
    - componentId
    properties:
      componentId:
        title: Component ID
        type: string
        description: "The ID of the software component. This will be used as the name of the git repository, component."
        default: my-app
        ui:autofocus: false
  - title: Project details
    required:
    - groupId
    - artifactId
    - version
    properties:
      groupId:
        title: Group ID
        type: string
        description: The group ID of the project
        default: org.acme
        ui:autofocus: false
      artifactId:
        title: Artifact ID
        type: string
        description: The artifact ID of the project
        default: my-app
        ui:autofocus: false
      version:
        title: Version
        type: string
        description: The version of the project
        default: 1.0-SNAPSHOT
        ui:autofocus: false
      name:
        title: Name
        type: string
        description: The name of the project
        ui:autofocus: false
      description:
        title: Description
        type: string
        description: The description of the project
        ui:autofocus: false
      package:
        title: Package
        type: string
        description: The base package of the project
        default: org.acme
        ui:autofocus: false
  - title: Git repository configuration
    required:
    - repoHost
    - repoOrg
    - repoName
    - repoBranch
    - repoVisibility
    properties:
      repoHost:
        title: Host
        type: string
        description: The host of the git repository
        default: github.com
        ui:autofocus: false
      repoOrg:
        title: Organization
        type: string
        description: The organization of the git repository
        ui:autofocus: false
      repoName:
        title: Name
        type: string
        description: The name of the git repository
        default: my-app
        ui:autofocus: false
      repoBranch:
        title: Branch
        type: string
        description: The branch of the git repository
        default: main
        ui:autofocus: false
      repoVisibility:
        title: Visibility
        type: string
        description: The visibility of the git repository
        default: public
        ui:autofocus: false
  - title: Helm values
    properties:
      helm:
        type: object
        properties:
          app:
            type: object
            properties:
              image:
                type: string
                default: docker.io/iocanel/hello-backstage:1.0.0-SNAPSHOT
                ui:autofocus: false
              ports:
                type: object
                properties:
                  http:
                    type: number
                    default: 8080
                    ui:autofocus: false
                ui:autofocus: false
            ui:autofocus: false
        ui:autofocus: false
  steps:
  - id: render
    name: Fetch Application Files
    action: fetch:template
    input:
      values:
        repoUrl: "https://${{ parameters.repoHost }}/${{ parameters.repoOrg }}/${{ parameters.repoName }}.git"
        repoHost: "${{ parameters.repoHost }}"
        componentId: "${{ parameters.componentId }}"
        package: "${{ parameters.package }}"
        repoName: "${{ parameters.repoName }}"
        groupId: "${{ parameters.groupId }}"
        helmAppImage: "${{ parameters.helm.app.image }}"
        helmAppPortsHttp: "${{ parameters.helm.app.ports.http }}"
        artifactId: "${{ parameters.artifactId }}"
        repoBranch: "${{ parameters.repoBranch }}"
        version: "${{ parameters.version }}"
        repoOrg: "${{ parameters.repoOrg }}"
      replace: true
      url: skeleton/
  - id: publish
    name: Publish to Github
    action: publish:github
    input:
      allowedHosts: "['github.com']"
      repoUrl: "${{ parameters.repoHost }}?owner=${{ parameters.repoOrg }}&repo=${{ parameters.repoName }}"
      protectDefaultBranch: false
      defaultBranch: main
      description: "This is ${{ parameters.description }}"
      repoVisibility: "${{ parameters.repo.visibility }}"
  - id: register
    name: Register Component
    action: catalog:register
    input:
      catalogInfoUrl: "https://${{ parameters.repo.host }}/${{ parameters.repo.org }}/${{ parameters.repo.name }}/blob/${{ parameters.repo.branch }}/catalog-info.yaml"
  output:
    links:
    - title: Open the catalog info
      entityRef: "${{ steps.register.output.entityRef }}"
    - title: Open the repository
      url: "https://${{ values.repoHost }}/${{ values.repoOrg }}/${{ values.repoName }}"
